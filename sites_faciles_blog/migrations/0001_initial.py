# Generated by Django 5.0.6 on 2024-05-28 18:07

import uuid

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import modelcluster.fields
import wagtail.blocks
import wagtail.documents.blocks
import wagtail.fields
import wagtail.images.blocks
import wagtail.search.index
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("taggit", "0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx"),
        ("sites_faciles", "0001_initial"),
        ("wagtailcore", "0093_uploadedfile"),
        ("wagtailimages", "0026_delete_uploadedimage"),
    ]

    operations = [
        migrations.CreateModel(
            name="BlogEntryPage",
            fields=[
                (
                    "contentpage_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="sites_faciles.contentpage",
                    ),
                ),
                ("date", models.DateTimeField(default=django.utils.timezone.now, verbose_name="Post date")),
            ],
            options={
                "verbose_name": "Blog page",
            },
            bases=("sites_faciles.contentpage",),
        ),
        migrations.CreateModel(
            name="BlogIndexPage",
            fields=[
                (
                    "contentpage_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="sites_faciles.contentpage",
                    ),
                ),
                (
                    "posts_per_page",
                    models.PositiveSmallIntegerField(
                        default=10,
                        validators=[
                            django.core.validators.MaxValueValidator(100),
                            django.core.validators.MinValueValidator(1),
                        ],
                        verbose_name="Posts per page",
                    ),
                ),
            ],
            options={
                "verbose_name": "Blog index",
            },
            bases=("sites_faciles.contentpage",),
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("translation_key", models.UUIDField(default=uuid.uuid4, editable=False)),
                ("name", models.CharField(max_length=80, unique=True, verbose_name="Category name")),
                ("slug", models.SlugField(max_length=80, unique=True)),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        help_text="Displayed on the top of the category page",
                        max_length=500,
                        verbose_name="Description",
                    ),
                ),
                (
                    "colophon",
                    wagtail.fields.StreamField(
                        [
                            ("paragraph", wagtail.blocks.RichTextBlock(label="Rich text")),
                            (
                                "imageandtext",
                                wagtail.blocks.StructBlock(
                                    [
                                        ("image", wagtail.images.blocks.ImageChooserBlock(label="Image")),
                                        (
                                            "image_side",
                                            wagtail.blocks.ChoiceBlock(
                                                choices=[("left", "Left"), ("right", "Right")],
                                                label="Side where the image is displayed",
                                            ),
                                        ),
                                        (
                                            "image_ratio",
                                            wagtail.blocks.ChoiceBlock(
                                                choices=[("3", "3/12"), ("5", "5/12"), ("6", "6/12")],
                                                label="Image width",
                                            ),
                                        ),
                                        ("text", wagtail.blocks.RichTextBlock(label="Rich text")),
                                        (
                                            "link",
                                            wagtail.blocks.StructBlock(
                                                [
                                                    (
                                                        "page",
                                                        wagtail.blocks.PageChooserBlock(
                                                            help_text="Link to a page of this site. Use either this or the external URL parameter.",
                                                            label="Page",
                                                            required=False,
                                                        ),
                                                    ),
                                                    (
                                                        "external_url",
                                                        wagtail.blocks.URLBlock(
                                                            help_text="Use either this or the Page parameter.",
                                                            label="External URL",
                                                            required=False,
                                                        ),
                                                    ),
                                                    (
                                                        "text",
                                                        wagtail.blocks.CharBlock(label="Link label", required=False),
                                                    ),
                                                ],
                                                help_text="The link is shown at the bottom of the text block, with an arrow",
                                                label="Link",
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "link_label",
                                            wagtail.blocks.CharBlock(
                                                group="obsolete",
                                                help_text="This field is obsolete and will be removed in the near future. Please replace with the Link field above.",
                                                label="Link label (obsolete)",
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "page",
                                            wagtail.blocks.PageChooserBlock(
                                                group="obsolete",
                                                help_text="This field is obsolete and will be removed in the near future. Please replace with the Link field above.",
                                                label="Internal link (obsolete)",
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "link_url",
                                            wagtail.blocks.URLBlock(
                                                group="obsolete",
                                                help_text="This field is obsolete and will be removed in the near future. Please replace with the Link field above.",
                                                label="Link URL (obsolete)",
                                                required=False,
                                            ),
                                        ),
                                    ],
                                    label="Bloc image et texte",
                                ),
                            ),
                            (
                                "quote",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "image",
                                            wagtail.images.blocks.ImageChooserBlock(label="Image", required=False),
                                        ),
                                        ("quote", wagtail.blocks.CharBlock(label="Quote")),
                                        ("author_name", wagtail.blocks.CharBlock(label="Author name")),
                                        (
                                            "author_title",
                                            wagtail.blocks.CharBlock(label="Author title", required=False),
                                        ),
                                        (
                                            "color",
                                            wagtail.blocks.ChoiceBlock(
                                                choices=[
                                                    ("village-color3", "Couleur 3"),
                                                    ("village-color4", "Couleur 4"),
                                                    ("village-color5", "Couleur 5"),
                                                    ("village-color6", "Couleur 6"),
                                                    ("village-color7", "Couleur 7"),
                                                    ("village-color8", "Couleur 8"),
                                                    ("village-color9", "Couleur 9"),
                                                    ("village-color10", "Couleur 10"),
                                                    ("village-color11", "Couleur 11"),
                                                    ("village-color12", "Couleur 12"),
                                                    ("village-color13", "Couleur 13"),
                                                    ("village-color14", "Couleur 14"),
                                                    ("village-color15", "Couleur 15"),
                                                    ("village-color16", "Couleur 16"),
                                                    ("village-color17", "Couleur 17"),
                                                    ("village-color18", "Couleur 18"),
                                                    ("village-color19", "Couleur 19"),
                                                    ("village-color20", "Couleur 20"),
                                                ],
                                                label="Color",
                                                required=False,
                                            ),
                                        ),
                                    ],
                                    label="Citation",
                                ),
                            ),
                            (
                                "multicolumns",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "bg_image",
                                            wagtail.images.blocks.ImageChooserBlock(
                                                label="Background image", required=False
                                            ),
                                        ),
                                        (
                                            "bg_color_class",
                                            wagtail.blocks.ChoiceBlock(
                                                choices=[
                                                    (
                                                        "Primary colors",
                                                        [
                                                            ("village-primary", "Couleur principale"),
                                                            ("village-secondary", "Couleur secondaire"),
                                                        ],
                                                    ),
                                                    ("Neutral colors", [("grey", "Grey")]),
                                                    (
                                                        "Illustration colors",
                                                        [
                                                            ("village-color3", "Couleur 3"),
                                                            ("village-color4", "Couleur 4"),
                                                            ("village-color5", "Couleur 5"),
                                                            ("village-color6", "Couleur 6"),
                                                            ("village-color7", "Couleur 7"),
                                                            ("village-color8", "Couleur 8"),
                                                            ("village-color9", "Couleur 9"),
                                                            ("village-color10", "Couleur 10"),
                                                            ("village-color11", "Couleur 11"),
                                                            ("village-color12", "Couleur 12"),
                                                            ("village-color13", "Couleur 13"),
                                                            ("village-color14", "Couleur 14"),
                                                            ("village-color15", "Couleur 15"),
                                                            ("village-color16", "Couleur 16"),
                                                            ("village-color17", "Couleur 17"),
                                                            ("village-color18", "Couleur 18"),
                                                            ("village-color19", "Couleur 19"),
                                                            ("village-color20", "Couleur 20"),
                                                        ],
                                                    ),
                                                ],
                                                help_text="Uses the French Design System colors",
                                                label="Background color",
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "bg_color",
                                            wagtail.blocks.RegexBlock(
                                                error_messages={
                                                    "invalid": "Incorrect color format, must be #fff or #f5f5f5"
                                                },
                                                help_text="(This field is obsolete and will be removed in the near future. Replace it with the background picture)",
                                                label="Background color, hexadecimal format (obsolete)",
                                                regex="^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$",
                                                required=False,
                                            ),
                                        ),
                                        ("title", wagtail.blocks.CharBlock(label="Title", required=False)),
                                        (
                                            "heading_tag",
                                            wagtail.blocks.ChoiceBlock(
                                                choices=[
                                                    ("h2", "En-tête 2"),
                                                    ("h3", "En-tête 3"),
                                                    ("h4", "En-tête 4"),
                                                    ("h5", "En-tête 5"),
                                                    ("h6", "En-tête 6"),
                                                    ("p", "Paragraphe"),
                                                ],
                                                help_text="Adapt to the page layout. Defaults to heading 2.",
                                                label="Heading level",
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "columns",
                                            wagtail.blocks.StreamBlock(
                                                [
                                                    ("text", wagtail.blocks.RichTextBlock(label="Rich text")),
                                                    (
                                                        "image",
                                                        wagtail.blocks.StructBlock(
                                                            [
                                                                (
                                                                    "title",
                                                                    wagtail.blocks.CharBlock(
                                                                        label="Title", required=False
                                                                    ),
                                                                ),
                                                                (
                                                                    "heading_tag",
                                                                    wagtail.blocks.ChoiceBlock(
                                                                        choices=[
                                                                            ("h2", "En-tête 2"),
                                                                            ("h3", "En-tête 3"),
                                                                            ("h4", "En-tête 4"),
                                                                            ("h5", "En-tête 5"),
                                                                            ("h6", "En-tête 6"),
                                                                            ("p", "Paragraphe"),
                                                                        ],
                                                                        help_text="Adapt to the page layout. Defaults to heading 3.",
                                                                        label="Heading level",
                                                                        required=False,
                                                                    ),
                                                                ),
                                                                (
                                                                    "image",
                                                                    wagtail.images.blocks.ImageChooserBlock(
                                                                        label="Image"
                                                                    ),
                                                                ),
                                                                (
                                                                    "alt",
                                                                    wagtail.blocks.CharBlock(
                                                                        label="Alternative text (textual description of the image)",
                                                                        required=False,
                                                                    ),
                                                                ),
                                                                (
                                                                    "caption",
                                                                    wagtail.blocks.CharBlock(
                                                                        label="Caption", required=False
                                                                    ),
                                                                ),
                                                                (
                                                                    "url",
                                                                    wagtail.blocks.URLBlock(
                                                                        label="Link", required=False
                                                                    ),
                                                                ),
                                                            ],
                                                            label="Image",
                                                        ),
                                                    ),
                                                    (
                                                        "video",
                                                        wagtail.blocks.StructBlock(
                                                            [
                                                                (
                                                                    "title",
                                                                    wagtail.blocks.CharBlock(
                                                                        label="Title", required=False
                                                                    ),
                                                                ),
                                                                ("caption", wagtail.blocks.CharBlock(label="Caption")),
                                                                (
                                                                    "url",
                                                                    wagtail.blocks.URLBlock(
                                                                        help_text="Use embed format (e.g. : https://www.youtube.com/embed/gLzXOViPX-0)",
                                                                        label="Video URL",
                                                                    ),
                                                                ),
                                                            ],
                                                            label="Video",
                                                        ),
                                                    ),
                                                    (
                                                        "quote",
                                                        wagtail.blocks.StructBlock(
                                                            [
                                                                (
                                                                    "image",
                                                                    wagtail.images.blocks.ImageChooserBlock(
                                                                        label="Image", required=False
                                                                    ),
                                                                ),
                                                                ("quote", wagtail.blocks.CharBlock(label="Quote")),
                                                                (
                                                                    "author_name",
                                                                    wagtail.blocks.CharBlock(label="Author name"),
                                                                ),
                                                                (
                                                                    "author_title",
                                                                    wagtail.blocks.CharBlock(
                                                                        label="Author title", required=False
                                                                    ),
                                                                ),
                                                                (
                                                                    "color",
                                                                    wagtail.blocks.ChoiceBlock(
                                                                        choices=[
                                                                            ("village-color3", "Couleur 3"),
                                                                            ("village-color4", "Couleur 4"),
                                                                            ("village-color5", "Couleur 5"),
                                                                            ("village-color6", "Couleur 6"),
                                                                            ("village-color7", "Couleur 7"),
                                                                            ("village-color8", "Couleur 8"),
                                                                            ("village-color9", "Couleur 9"),
                                                                            ("village-color10", "Couleur 10"),
                                                                            ("village-color11", "Couleur 11"),
                                                                            ("village-color12", "Couleur 12"),
                                                                            ("village-color13", "Couleur 13"),
                                                                            ("village-color14", "Couleur 14"),
                                                                            ("village-color15", "Couleur 15"),
                                                                            ("village-color16", "Couleur 16"),
                                                                            ("village-color17", "Couleur 17"),
                                                                            ("village-color18", "Couleur 18"),
                                                                            ("village-color19", "Couleur 19"),
                                                                            ("village-color20", "Couleur 20"),
                                                                        ],
                                                                        label="Color",
                                                                        required=False,
                                                                    ),
                                                                ),
                                                            ],
                                                            label="Quote",
                                                        ),
                                                    ),
                                                    (
                                                        "text_cta",
                                                        wagtail.blocks.StructBlock(
                                                            [
                                                                (
                                                                    "text",
                                                                    wagtail.blocks.RichTextBlock(
                                                                        label="Rich text", required=False
                                                                    ),
                                                                ),
                                                                (
                                                                    "cta_label",
                                                                    wagtail.blocks.CharBlock(
                                                                        help_text="The link appears as a button under the text block",
                                                                        label="Call to action label",
                                                                        required=False,
                                                                    ),
                                                                ),
                                                                (
                                                                    "cta_url",
                                                                    wagtail.blocks.CharBlock(
                                                                        label="Link", required=False
                                                                    ),
                                                                ),
                                                            ],
                                                            label="Text and call to action",
                                                        ),
                                                    ),
                                                    (
                                                        "iframe",
                                                        wagtail.blocks.StructBlock(
                                                            [
                                                                (
                                                                    "title",
                                                                    wagtail.blocks.CharBlock(
                                                                        help_text="Accessibility: The title should describe, in a clear and concise manner, the embedded content.",
                                                                        label="Title",
                                                                    ),
                                                                ),
                                                                (
                                                                    "url",
                                                                    wagtail.blocks.URLBlock(
                                                                        help_text="Example for Tally: https://tally.so/embed/w2jMRa",
                                                                        label="URL of the iframe",
                                                                    ),
                                                                ),
                                                                (
                                                                    "height",
                                                                    wagtail.blocks.IntegerBlock(
                                                                        label="Height (in pixels)"
                                                                    ),
                                                                ),
                                                            ],
                                                            label="Iframe",
                                                        ),
                                                    ),
                                                    (
                                                        "card",
                                                        wagtail.blocks.StructBlock(
                                                            [
                                                                ("title", wagtail.blocks.CharBlock(label="Title")),
                                                                (
                                                                    "description",
                                                                    wagtail.blocks.TextBlock(label="Content"),
                                                                ),
                                                                (
                                                                    "image",
                                                                    wagtail.images.blocks.ImageChooserBlock(
                                                                        label="Image", required=False
                                                                    ),
                                                                ),
                                                                (
                                                                    "url",
                                                                    wagtail.blocks.URLBlock(
                                                                        group="target", label="Link", required=False
                                                                    ),
                                                                ),
                                                                (
                                                                    "document",
                                                                    wagtail.documents.blocks.DocumentChooserBlock(
                                                                        group="target",
                                                                        help_text="Select a document to make the card link to it (if the 'Link' field is not populated.)",
                                                                        label="or Document",
                                                                        required=False,
                                                                    ),
                                                                ),
                                                            ],
                                                            label="Vertical card",
                                                        ),
                                                    ),
                                                ],
                                                label="Columns",
                                            ),
                                        ),
                                    ],
                                    label="Multi-colonnes",
                                ),
                            ),
                            (
                                "contact_card",
                                wagtail.blocks.StructBlock(
                                    [
                                        ("name", wagtail.blocks.CharBlock(label="Name", max_length=255)),
                                        ("role", wagtail.blocks.CharBlock(label="Role", max_length=255)),
                                        (
                                            "organization",
                                            wagtail.blocks.CharBlock(label="Organization", max_length=255),
                                        ),
                                        (
                                            "contact_info",
                                            wagtail.blocks.CharBlock(
                                                label="Contact info", max_length=500, required=False
                                            ),
                                        ),
                                        ("image", wagtail.images.blocks.ImageChooserBlock(label="Image")),
                                    ],
                                    label="Contact card",
                                ),
                            ),
                        ],
                        blank=True,
                        help_text="Text displayed at the end of every page in the category",
                    ),
                ),
                (
                    "locale",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to="wagtailcore.locale",
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="children",
                        to="sites_faciles_blog.category",
                        verbose_name="Parent category",
                    ),
                ),
            ],
            options={
                "verbose_name": "Category",
                "verbose_name_plural": "Categories",
                "ordering": ["name"],
                "unique_together": {("name", "locale"), ("slug", "locale"), ("translation_key", "locale")},
            },
            bases=(wagtail.search.index.Indexed, models.Model),
        ),
        migrations.CreateModel(
            name="CategoryEntryPage",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="sites_faciles_blog.category",
                        verbose_name="Category",
                    ),
                ),
                (
                    "page",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="entry_categories",
                        to="sites_faciles_blog.blogentrypage",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="blogentrypage",
            name="blog_categories",
            field=modelcluster.fields.ParentalManyToManyField(
                blank=True,
                through="sites_faciles_blog.CategoryEntryPage",
                to="sites_faciles_blog.category",
                verbose_name="Categories",
            ),
        ),
        migrations.CreateModel(
            name="Person",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=255, verbose_name="Name")),
                ("role", models.CharField(max_length=255, verbose_name="Role")),
                ("organization", models.CharField(max_length=255, verbose_name="Organization")),
                ("contact_info", models.CharField(blank=True, max_length=500, verbose_name="Contact info")),
                (
                    "image",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wagtailimages.image",
                    ),
                ),
            ],
            options={
                "verbose_name": "Person",
            },
        ),
        migrations.AddField(
            model_name="blogentrypage",
            name="authors",
            field=modelcluster.fields.ParentalManyToManyField(
                blank=True,
                help_text="Author entries can be created in Snippets > Persons",
                to="sites_faciles_blog.person",
            ),
        ),
        migrations.CreateModel(
            name="TagEntryPage",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "content_object",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="entry_tags",
                        to="sites_faciles_blog.blogentrypage",
                    ),
                ),
                (
                    "tag",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_items",
                        to="taggit.tag",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
