# Generated by Django 5.0.6 on 2024-05-28 08:18

import django.db.models.deletion
import modelcluster.contrib.taggit
import modelcluster.fields
import wagtail.blocks
import wagtail.contrib.forms.models
import wagtail.documents.blocks
import wagtail.fields
import wagtail.images.blocks
import wagtailmarkdown.blocks
from django.db import migrations, models

import wagtail_village.blocks
import wagtail_village.models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("django_village", "0002_alter_djangovillageconfig_language"),
        ("taggit", "0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx"),
        ("wagtailcore", "0093_uploadedfile"),
        ("wagtailimages", "0026_delete_uploadedimage"),
        ("wagtailmenus", "0023_remove_use_specific"),
    ]

    operations = [
        migrations.CreateModel(
            name="FormPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "to_address",
                    models.CharField(
                        blank=True,
                        help_text="Optional - form submissions will be emailed to these addresses. Separate multiple addresses by comma.",
                        max_length=255,
                        validators=[wagtail.contrib.forms.models.validate_to_address],
                        verbose_name="to address",
                    ),
                ),
                ("from_address", models.EmailField(blank=True, max_length=255, verbose_name="from address")),
                ("subject", models.CharField(blank=True, max_length=255, verbose_name="subject")),
                ("intro", wagtail.fields.RichTextField(blank=True)),
                ("thank_you_text", wagtail.fields.RichTextField(blank=True)),
            ],
            options={
                "abstract": False,
            },
            bases=(wagtail.contrib.forms.models.FormMixin, "wagtailcore.page", models.Model),
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("taggit.tag",),
        ),
        migrations.CreateModel(
            name="AnalyticsSettings",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "head_scripts",
                    wagtail_village.models.MonospaceField(
                        blank=True,
                        help_text="Ajoutez des scripts de suivi entre les balises <head>.",
                        null=True,
                        verbose_name="Scripts de suivi <head>",
                    ),
                ),
                (
                    "body_scripts",
                    wagtail_village.models.MonospaceField(
                        blank=True,
                        help_text="Ajoutez des scripts de suivi vers la fermeture de la balise <body>.",
                        null=True,
                        verbose_name="Scripts de suivi <body>",
                    ),
                ),
                (
                    "site",
                    models.OneToOneField(
                        editable=False, on_delete=django.db.models.deletion.CASCADE, to="wagtailcore.site"
                    ),
                ),
            ],
            options={
                "verbose_name": "Scripts de suivi",
            },
        ),
        migrations.CreateModel(
            name="ContentPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "body",
                    wagtail.fields.StreamField(
                        [
                            ("paragraph", wagtail.blocks.RichTextBlock(label="Rich text")),
                            (
                                "badges_list",
                                wagtail.blocks.StreamBlock(
                                    [
                                        (
                                            "badge",
                                            wagtail.blocks.StructBlock(
                                                [
                                                    (
                                                        "text",
                                                        wagtail.blocks.CharBlock(label="Badge label", required=False),
                                                    ),
                                                    (
                                                        "color",
                                                        wagtail.blocks.ChoiceBlock(
                                                            choices=[
                                                                ("info", "Info"),
                                                                ("success", "Success"),
                                                                ("warning", "Warning"),
                                                                ("error", "Error"),
                                                                ("new", "New"),
                                                                ("grey", "Grey"),
                                                                ("village-color3", "Couleur 3"),
                                                                ("village-color4", "Couleur 4"),
                                                                ("village-color5", "Couleur 5"),
                                                                ("village-color6", "Couleur 6"),
                                                                ("village-color7", "Couleur 7"),
                                                                ("village-color8", "Couleur 8"),
                                                                ("village-color9", "Couleur 9"),
                                                                ("village-color10", "Couleur 10"),
                                                                ("village-color11", "Couleur 11"),
                                                                ("village-color12", "Couleur 12"),
                                                                ("village-color13", "Couleur 13"),
                                                                ("village-color14", "Couleur 14"),
                                                                ("village-color15", "Couleur 15"),
                                                                ("village-color16", "Couleur 16"),
                                                                ("village-color17", "Couleur 17"),
                                                                ("village-color18", "Couleur 18"),
                                                                ("village-color19", "Couleur 19"),
                                                                ("village-color20", "Couleur 20"),
                                                            ],
                                                            label="Badge color",
                                                            required=False,
                                                        ),
                                                    ),
                                                    (
                                                        "hide_icon",
                                                        wagtail.blocks.BooleanBlock(
                                                            label="Hide badge icon", required=False
                                                        ),
                                                    ),
                                                ],
                                                label="Badge",
                                            ),
                                        )
                                    ],
                                    label="Badge list",
                                ),
                            ),
                            (
                                "image",
                                wagtail.blocks.StructBlock(
                                    [
                                        ("title", wagtail.blocks.CharBlock(label="Title", required=False)),
                                        (
                                            "heading_tag",
                                            wagtail.blocks.ChoiceBlock(
                                                choices=[
                                                    ("h2", "En-tête 2"),
                                                    ("h3", "En-tête 3"),
                                                    ("h4", "En-tête 4"),
                                                    ("h5", "En-tête 5"),
                                                    ("h6", "En-tête 6"),
                                                    ("p", "Paragraphe"),
                                                ],
                                                help_text="Adapt to the page layout. Defaults to heading 3.",
                                                label="Heading level",
                                                required=False,
                                            ),
                                        ),
                                        ("image", wagtail.images.blocks.ImageChooserBlock(label="Image")),
                                        (
                                            "alt",
                                            wagtail.blocks.CharBlock(
                                                label="Alternative text (textual description of the image)",
                                                required=False,
                                            ),
                                        ),
                                        ("caption", wagtail.blocks.CharBlock(label="Caption", required=False)),
                                        ("url", wagtail.blocks.URLBlock(label="Link", required=False)),
                                    ]
                                ),
                            ),
                            (
                                "imageandtext",
                                wagtail.blocks.StructBlock(
                                    [
                                        ("image", wagtail.images.blocks.ImageChooserBlock(label="Image")),
                                        (
                                            "image_side",
                                            wagtail.blocks.ChoiceBlock(
                                                choices=[("left", "Left"), ("right", "Right")],
                                                label="Side where the image is displayed",
                                            ),
                                        ),
                                        (
                                            "image_ratio",
                                            wagtail.blocks.ChoiceBlock(
                                                choices=[("3", "3/12"), ("5", "5/12"), ("6", "6/12")],
                                                label="Image width",
                                            ),
                                        ),
                                        ("text", wagtail.blocks.RichTextBlock(label="Rich text")),
                                        (
                                            "link",
                                            wagtail.blocks.StructBlock(
                                                [
                                                    (
                                                        "page",
                                                        wagtail.blocks.PageChooserBlock(
                                                            help_text="Link to a page of this site. Use either this or the external URL parameter.",
                                                            label="Page",
                                                            required=False,
                                                        ),
                                                    ),
                                                    (
                                                        "external_url",
                                                        wagtail.blocks.URLBlock(
                                                            help_text="Use either this or the Page parameter.",
                                                            label="External URL",
                                                            required=False,
                                                        ),
                                                    ),
                                                    (
                                                        "text",
                                                        wagtail.blocks.CharBlock(label="Link label", required=False),
                                                    ),
                                                ],
                                                help_text="The link is shown at the bottom of the text block, with an arrow",
                                                label="Link",
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "link_label",
                                            wagtail.blocks.CharBlock(
                                                group="obsolete",
                                                help_text="This field is obsolete and will be removed in the near future. Please replace with the Link field above.",
                                                label="Link label (obsolete)",
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "page",
                                            wagtail.blocks.PageChooserBlock(
                                                group="obsolete",
                                                help_text="This field is obsolete and will be removed in the near future. Please replace with the Link field above.",
                                                label="Internal link (obsolete)",
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "link_url",
                                            wagtail.blocks.URLBlock(
                                                group="obsolete",
                                                help_text="This field is obsolete and will be removed in the near future. Please replace with the Link field above.",
                                                label="Link URL (obsolete)",
                                                required=False,
                                            ),
                                        ),
                                    ],
                                    label="Image and text",
                                ),
                            ),
                            (
                                "alert",
                                wagtail.blocks.StructBlock(
                                    [
                                        ("title", wagtail.blocks.CharBlock(label="Message title", required=False)),
                                        (
                                            "description",
                                            wagtail.blocks.TextBlock(label="Message text", required=False),
                                        ),
                                        (
                                            "level",
                                            wagtail.blocks.ChoiceBlock(
                                                choices=[
                                                    ("error", "Erreur"),
                                                    ("success", "Succès"),
                                                    ("info", "Information"),
                                                    ("warning", "Attention"),
                                                ],
                                                label="Message type",
                                            ),
                                        ),
                                        (
                                            "heading_tag",
                                            wagtail.blocks.ChoiceBlock(
                                                choices=[
                                                    ("h2", "En-tête 2"),
                                                    ("h3", "En-tête 3"),
                                                    ("h4", "En-tête 4"),
                                                    ("h5", "En-tête 5"),
                                                    ("h6", "En-tête 6"),
                                                    ("p", "Paragraphe"),
                                                ],
                                                help_text="Adapt to the page layout. Defaults to heading 3.",
                                                label="Heading level",
                                            ),
                                        ),
                                    ],
                                    label="Alert message",
                                ),
                            ),
                            (
                                "callout",
                                wagtail.blocks.StructBlock(
                                    [
                                        ("title", wagtail.blocks.CharBlock(label="Callout title", required=False)),
                                        ("text", wagtail.blocks.TextBlock(label="Callout text", required=False)),
                                        (
                                            "heading_tag",
                                            wagtail.blocks.ChoiceBlock(
                                                choices=[
                                                    ("h2", "En-tête 2"),
                                                    ("h3", "En-tête 3"),
                                                    ("h4", "En-tête 4"),
                                                    ("h5", "En-tête 5"),
                                                    ("h6", "En-tête 6"),
                                                    ("p", "Paragraphe"),
                                                ],
                                                help_text="Adapt to the page layout. Defaults to heading 3.",
                                                label="Heading level",
                                            ),
                                        ),
                                    ],
                                    label="Callout",
                                ),
                            ),
                            (
                                "quote",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "image",
                                            wagtail.images.blocks.ImageChooserBlock(label="Image", required=False),
                                        ),
                                        ("quote", wagtail.blocks.CharBlock(label="Quote")),
                                        ("author_name", wagtail.blocks.CharBlock(label="Author name")),
                                        (
                                            "author_title",
                                            wagtail.blocks.CharBlock(label="Author title", required=False),
                                        ),
                                        (
                                            "color",
                                            wagtail.blocks.ChoiceBlock(
                                                choices=[
                                                    ("village-color3", "Couleur 3"),
                                                    ("village-color4", "Couleur 4"),
                                                    ("village-color5", "Couleur 5"),
                                                    ("village-color6", "Couleur 6"),
                                                    ("village-color7", "Couleur 7"),
                                                    ("village-color8", "Couleur 8"),
                                                    ("village-color9", "Couleur 9"),
                                                    ("village-color10", "Couleur 10"),
                                                    ("village-color11", "Couleur 11"),
                                                    ("village-color12", "Couleur 12"),
                                                    ("village-color13", "Couleur 13"),
                                                    ("village-color14", "Couleur 14"),
                                                    ("village-color15", "Couleur 15"),
                                                    ("village-color16", "Couleur 16"),
                                                    ("village-color17", "Couleur 17"),
                                                    ("village-color18", "Couleur 18"),
                                                    ("village-color19", "Couleur 19"),
                                                    ("village-color20", "Couleur 20"),
                                                ],
                                                label="Color",
                                                required=False,
                                            ),
                                        ),
                                    ],
                                    label="Quote",
                                ),
                            ),
                            (
                                "video",
                                wagtail.blocks.StructBlock(
                                    [
                                        ("title", wagtail.blocks.CharBlock(label="Title", required=False)),
                                        ("caption", wagtail.blocks.CharBlock(label="Caption")),
                                        (
                                            "url",
                                            wagtail.blocks.URLBlock(
                                                help_text="Use embed format (e.g. : https://www.youtube.com/embed/gLzXOViPX-0)",
                                                label="Video URL",
                                            ),
                                        ),
                                    ],
                                    label="Video",
                                ),
                            ),
                            (
                                "accordions",
                                wagtail.blocks.StreamBlock(
                                    [
                                        ("title", wagtail.blocks.CharBlock(label="Title")),
                                        (
                                            "accordion",
                                            wagtail.blocks.StructBlock(
                                                [
                                                    ("title", wagtail.blocks.CharBlock(label="Title")),
                                                    ("content", wagtail.blocks.RichTextBlock(label="Content")),
                                                ],
                                                label="Accordion",
                                                max_num=15,
                                                min_num=1,
                                            ),
                                        ),
                                    ],
                                    label="Accordions",
                                ),
                            ),
                            (
                                "stepper",
                                wagtail.blocks.StructBlock(
                                    [
                                        ("title", wagtail.blocks.CharBlock(label="Title")),
                                        ("total", wagtail.blocks.IntegerBlock(label="Number of steps")),
                                        ("current", wagtail.blocks.IntegerBlock(label="Current step")),
                                        (
                                            "steps",
                                            wagtail.blocks.StreamBlock(
                                                [
                                                    (
                                                        "step",
                                                        wagtail.blocks.StructBlock(
                                                            [
                                                                ("title", wagtail.blocks.CharBlock(label="Title")),
                                                                ("detail", wagtail.blocks.TextBlock(label="Detail")),
                                                            ],
                                                            label="Step",
                                                        ),
                                                    )
                                                ],
                                                label="Steps",
                                            ),
                                        ),
                                    ],
                                    label="Stepper",
                                ),
                            ),
                            (
                                "tags_list",
                                wagtail.blocks.StreamBlock(
                                    [
                                        (
                                            "tag",
                                            wagtail.blocks.StructBlock(
                                                [
                                                    ("label", wagtail.blocks.CharBlock(label="Title")),
                                                    (
                                                        "is_small",
                                                        wagtail.blocks.BooleanBlock(label="Small tag", required=False),
                                                    ),
                                                    (
                                                        "color",
                                                        wagtail.blocks.ChoiceBlock(
                                                            choices=[
                                                                ("village-color3", "Couleur 3"),
                                                                ("village-color4", "Couleur 4"),
                                                                ("village-color5", "Couleur 5"),
                                                                ("village-color6", "Couleur 6"),
                                                                ("village-color7", "Couleur 7"),
                                                                ("village-color8", "Couleur 8"),
                                                                ("village-color9", "Couleur 9"),
                                                                ("village-color10", "Couleur 10"),
                                                                ("village-color11", "Couleur 11"),
                                                                ("village-color12", "Couleur 12"),
                                                                ("village-color13", "Couleur 13"),
                                                                ("village-color14", "Couleur 14"),
                                                                ("village-color15", "Couleur 15"),
                                                                ("village-color16", "Couleur 16"),
                                                                ("village-color17", "Couleur 17"),
                                                                ("village-color18", "Couleur 18"),
                                                                ("village-color19", "Couleur 19"),
                                                                ("village-color20", "Couleur 20"),
                                                            ],
                                                            help_text="Only for clickable tags",
                                                            label="Tag color",
                                                            required=False,
                                                        ),
                                                    ),
                                                    (
                                                        "icon_class",
                                                        wagtail_village.blocks.IconPickerBlock(
                                                            label="Icon", required=False
                                                        ),
                                                    ),
                                                    (
                                                        "link",
                                                        wagtail.blocks.StructBlock(
                                                            [
                                                                (
                                                                    "page",
                                                                    wagtail.blocks.PageChooserBlock(
                                                                        help_text="Link to a page of this site. Use either this or the external URL parameter.",
                                                                        label="Page",
                                                                        required=False,
                                                                    ),
                                                                ),
                                                                (
                                                                    "external_url",
                                                                    wagtail.blocks.URLBlock(
                                                                        help_text="Use either this or the Page parameter.",
                                                                        label="External URL",
                                                                        required=False,
                                                                    ),
                                                                ),
                                                            ],
                                                            required=False,
                                                        ),
                                                    ),
                                                ],
                                                label="Tag",
                                            ),
                                        )
                                    ],
                                    label="Tag list",
                                ),
                            ),
                            ("markdown", wagtailmarkdown.blocks.MarkdownBlock(label="Markdown")),
                            (
                                "separator",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "top_margin",
                                            wagtail.blocks.IntegerBlock(
                                                default=3, label="Top margin", max_value=15, min_value=0
                                            ),
                                        ),
                                        (
                                            "bottom_margin",
                                            wagtail.blocks.IntegerBlock(
                                                default=3, label="Bottom margin", max_value=15, min_value=0
                                            ),
                                        ),
                                    ],
                                    label="Separator",
                                ),
                            ),
                            (
                                "multicolumns",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "bg_image",
                                            wagtail.images.blocks.ImageChooserBlock(
                                                label="Background image", required=False
                                            ),
                                        ),
                                        (
                                            "bg_color_class",
                                            wagtail.blocks.ChoiceBlock(
                                                choices=[
                                                    (
                                                        "Primary colors",
                                                        [
                                                            ("village-primary", "Couleur principale"),
                                                            ("village-secondary", "Couleur secondaire"),
                                                        ],
                                                    ),
                                                    ("Neutral colors", [("grey", "Grey")]),
                                                    (
                                                        "Illustration colors",
                                                        [
                                                            ("village-color3", "Couleur 3"),
                                                            ("village-color4", "Couleur 4"),
                                                            ("village-color5", "Couleur 5"),
                                                            ("village-color6", "Couleur 6"),
                                                            ("village-color7", "Couleur 7"),
                                                            ("village-color8", "Couleur 8"),
                                                            ("village-color9", "Couleur 9"),
                                                            ("village-color10", "Couleur 10"),
                                                            ("village-color11", "Couleur 11"),
                                                            ("village-color12", "Couleur 12"),
                                                            ("village-color13", "Couleur 13"),
                                                            ("village-color14", "Couleur 14"),
                                                            ("village-color15", "Couleur 15"),
                                                            ("village-color16", "Couleur 16"),
                                                            ("village-color17", "Couleur 17"),
                                                            ("village-color18", "Couleur 18"),
                                                            ("village-color19", "Couleur 19"),
                                                            ("village-color20", "Couleur 20"),
                                                        ],
                                                    ),
                                                ],
                                                help_text="Uses the French Design System colors",
                                                label="Background color",
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "bg_color",
                                            wagtail.blocks.RegexBlock(
                                                error_messages={
                                                    "invalid": "Incorrect color format, must be #fff or #f5f5f5"
                                                },
                                                help_text="(This field is obsolete and will be removed in the near future. Replace it with the background picture)",
                                                label="Background color, hexadecimal format (obsolete)",
                                                regex="^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$",
                                                required=False,
                                            ),
                                        ),
                                        ("title", wagtail.blocks.CharBlock(label="Title", required=False)),
                                        (
                                            "heading_tag",
                                            wagtail.blocks.ChoiceBlock(
                                                choices=[
                                                    ("h2", "En-tête 2"),
                                                    ("h3", "En-tête 3"),
                                                    ("h4", "En-tête 4"),
                                                    ("h5", "En-tête 5"),
                                                    ("h6", "En-tête 6"),
                                                    ("p", "Paragraphe"),
                                                ],
                                                help_text="Adapt to the page layout. Defaults to heading 2.",
                                                label="Heading level",
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "columns",
                                            wagtail.blocks.StreamBlock(
                                                [
                                                    ("text", wagtail.blocks.RichTextBlock(label="Rich text")),
                                                    (
                                                        "image",
                                                        wagtail.blocks.StructBlock(
                                                            [
                                                                (
                                                                    "title",
                                                                    wagtail.blocks.CharBlock(
                                                                        label="Title", required=False
                                                                    ),
                                                                ),
                                                                (
                                                                    "heading_tag",
                                                                    wagtail.blocks.ChoiceBlock(
                                                                        choices=[
                                                                            ("h2", "En-tête 2"),
                                                                            ("h3", "En-tête 3"),
                                                                            ("h4", "En-tête 4"),
                                                                            ("h5", "En-tête 5"),
                                                                            ("h6", "En-tête 6"),
                                                                            ("p", "Paragraphe"),
                                                                        ],
                                                                        help_text="Adapt to the page layout. Defaults to heading 3.",
                                                                        label="Heading level",
                                                                        required=False,
                                                                    ),
                                                                ),
                                                                (
                                                                    "image",
                                                                    wagtail.images.blocks.ImageChooserBlock(
                                                                        label="Image"
                                                                    ),
                                                                ),
                                                                (
                                                                    "alt",
                                                                    wagtail.blocks.CharBlock(
                                                                        label="Alternative text (textual description of the image)",
                                                                        required=False,
                                                                    ),
                                                                ),
                                                                (
                                                                    "caption",
                                                                    wagtail.blocks.CharBlock(
                                                                        label="Caption", required=False
                                                                    ),
                                                                ),
                                                                (
                                                                    "url",
                                                                    wagtail.blocks.URLBlock(
                                                                        label="Link", required=False
                                                                    ),
                                                                ),
                                                            ],
                                                            label="Image",
                                                        ),
                                                    ),
                                                    (
                                                        "video",
                                                        wagtail.blocks.StructBlock(
                                                            [
                                                                (
                                                                    "title",
                                                                    wagtail.blocks.CharBlock(
                                                                        label="Title", required=False
                                                                    ),
                                                                ),
                                                                ("caption", wagtail.blocks.CharBlock(label="Caption")),
                                                                (
                                                                    "url",
                                                                    wagtail.blocks.URLBlock(
                                                                        help_text="Use embed format (e.g. : https://www.youtube.com/embed/gLzXOViPX-0)",
                                                                        label="Video URL",
                                                                    ),
                                                                ),
                                                            ],
                                                            label="Video",
                                                        ),
                                                    ),
                                                    (
                                                        "quote",
                                                        wagtail.blocks.StructBlock(
                                                            [
                                                                (
                                                                    "image",
                                                                    wagtail.images.blocks.ImageChooserBlock(
                                                                        label="Image", required=False
                                                                    ),
                                                                ),
                                                                ("quote", wagtail.blocks.CharBlock(label="Quote")),
                                                                (
                                                                    "author_name",
                                                                    wagtail.blocks.CharBlock(label="Author name"),
                                                                ),
                                                                (
                                                                    "author_title",
                                                                    wagtail.blocks.CharBlock(
                                                                        label="Author title", required=False
                                                                    ),
                                                                ),
                                                                (
                                                                    "color",
                                                                    wagtail.blocks.ChoiceBlock(
                                                                        choices=[
                                                                            ("village-color3", "Couleur 3"),
                                                                            ("village-color4", "Couleur 4"),
                                                                            ("village-color5", "Couleur 5"),
                                                                            ("village-color6", "Couleur 6"),
                                                                            ("village-color7", "Couleur 7"),
                                                                            ("village-color8", "Couleur 8"),
                                                                            ("village-color9", "Couleur 9"),
                                                                            ("village-color10", "Couleur 10"),
                                                                            ("village-color11", "Couleur 11"),
                                                                            ("village-color12", "Couleur 12"),
                                                                            ("village-color13", "Couleur 13"),
                                                                            ("village-color14", "Couleur 14"),
                                                                            ("village-color15", "Couleur 15"),
                                                                            ("village-color16", "Couleur 16"),
                                                                            ("village-color17", "Couleur 17"),
                                                                            ("village-color18", "Couleur 18"),
                                                                            ("village-color19", "Couleur 19"),
                                                                            ("village-color20", "Couleur 20"),
                                                                        ],
                                                                        label="Color",
                                                                        required=False,
                                                                    ),
                                                                ),
                                                            ],
                                                            label="Quote",
                                                        ),
                                                    ),
                                                    (
                                                        "text_cta",
                                                        wagtail.blocks.StructBlock(
                                                            [
                                                                (
                                                                    "text",
                                                                    wagtail.blocks.RichTextBlock(
                                                                        label="Rich text", required=False
                                                                    ),
                                                                ),
                                                                (
                                                                    "cta_label",
                                                                    wagtail.blocks.CharBlock(
                                                                        help_text="The link appears as a button under the text block",
                                                                        label="Call to action label",
                                                                        required=False,
                                                                    ),
                                                                ),
                                                                (
                                                                    "cta_url",
                                                                    wagtail.blocks.CharBlock(
                                                                        label="Link", required=False
                                                                    ),
                                                                ),
                                                            ],
                                                            label="Text and call to action",
                                                        ),
                                                    ),
                                                    (
                                                        "iframe",
                                                        wagtail.blocks.StructBlock(
                                                            [
                                                                (
                                                                    "title",
                                                                    wagtail.blocks.CharBlock(
                                                                        help_text="Accessibility: The title should describe, in a clear and concise manner, the embedded content.",
                                                                        label="Title",
                                                                    ),
                                                                ),
                                                                (
                                                                    "url",
                                                                    wagtail.blocks.URLBlock(
                                                                        help_text="Example for Tally: https://tally.so/embed/w2jMRa",
                                                                        label="URL of the iframe",
                                                                    ),
                                                                ),
                                                                (
                                                                    "height",
                                                                    wagtail.blocks.IntegerBlock(
                                                                        label="Height (in pixels)"
                                                                    ),
                                                                ),
                                                            ],
                                                            label="Iframe",
                                                        ),
                                                    ),
                                                    (
                                                        "card",
                                                        wagtail.blocks.StructBlock(
                                                            [
                                                                ("title", wagtail.blocks.CharBlock(label="Title")),
                                                                (
                                                                    "description",
                                                                    wagtail.blocks.TextBlock(label="Content"),
                                                                ),
                                                                (
                                                                    "image",
                                                                    wagtail.images.blocks.ImageChooserBlock(
                                                                        label="Image", required=False
                                                                    ),
                                                                ),
                                                                (
                                                                    "url",
                                                                    wagtail.blocks.URLBlock(
                                                                        group="target", label="Link", required=False
                                                                    ),
                                                                ),
                                                                (
                                                                    "document",
                                                                    wagtail.documents.blocks.DocumentChooserBlock(
                                                                        group="target",
                                                                        help_text="Select a document to make the card link to it (if the 'Link' field is not populated.)",
                                                                        label="or Document",
                                                                        required=False,
                                                                    ),
                                                                ),
                                                            ],
                                                            label="Vertical card",
                                                        ),
                                                    ),
                                                ],
                                                label="Columns",
                                            ),
                                        ),
                                    ],
                                    group="Page structure",
                                    label="Multiple columns",
                                ),
                            ),
                            (
                                "fullwidthbackground",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "bg_image",
                                            wagtail.images.blocks.ImageChooserBlock(
                                                label="Background image", required=False
                                            ),
                                        ),
                                        (
                                            "bg_color_class",
                                            wagtail.blocks.ChoiceBlock(
                                                choices=[
                                                    (
                                                        "Primary colors",
                                                        [
                                                            ("village-primary", "Couleur principale"),
                                                            ("village-secondary", "Couleur secondaire"),
                                                        ],
                                                    ),
                                                    ("Neutral colors", [("grey", "Grey")]),
                                                    (
                                                        "Illustration colors",
                                                        [
                                                            ("village-color3", "Couleur 3"),
                                                            ("village-color4", "Couleur 4"),
                                                            ("village-color5", "Couleur 5"),
                                                            ("village-color6", "Couleur 6"),
                                                            ("village-color7", "Couleur 7"),
                                                            ("village-color8", "Couleur 8"),
                                                            ("village-color9", "Couleur 9"),
                                                            ("village-color10", "Couleur 10"),
                                                            ("village-color11", "Couleur 11"),
                                                            ("village-color12", "Couleur 12"),
                                                            ("village-color13", "Couleur 13"),
                                                            ("village-color14", "Couleur 14"),
                                                            ("village-color15", "Couleur 15"),
                                                            ("village-color16", "Couleur 16"),
                                                            ("village-color17", "Couleur 17"),
                                                            ("village-color18", "Couleur 18"),
                                                            ("village-color19", "Couleur 19"),
                                                            ("village-color20", "Couleur 20"),
                                                        ],
                                                    ),
                                                ],
                                                help_text="Uses the French Design System colors",
                                                label="Background color",
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "content",
                                            wagtail.blocks.StreamBlock(
                                                [
                                                    ("text", wagtail.blocks.RichTextBlock(label="Rich text")),
                                                    (
                                                        "image",
                                                        wagtail.blocks.StructBlock(
                                                            [
                                                                (
                                                                    "title",
                                                                    wagtail.blocks.CharBlock(
                                                                        label="Title", required=False
                                                                    ),
                                                                ),
                                                                (
                                                                    "heading_tag",
                                                                    wagtail.blocks.ChoiceBlock(
                                                                        choices=[
                                                                            ("h2", "En-tête 2"),
                                                                            ("h3", "En-tête 3"),
                                                                            ("h4", "En-tête 4"),
                                                                            ("h5", "En-tête 5"),
                                                                            ("h6", "En-tête 6"),
                                                                            ("p", "Paragraphe"),
                                                                        ],
                                                                        help_text="Adapt to the page layout. Defaults to heading 3.",
                                                                        label="Heading level",
                                                                        required=False,
                                                                    ),
                                                                ),
                                                                (
                                                                    "image",
                                                                    wagtail.images.blocks.ImageChooserBlock(
                                                                        label="Image"
                                                                    ),
                                                                ),
                                                                (
                                                                    "alt",
                                                                    wagtail.blocks.CharBlock(
                                                                        label="Alternative text (textual description of the image)",
                                                                        required=False,
                                                                    ),
                                                                ),
                                                                (
                                                                    "caption",
                                                                    wagtail.blocks.CharBlock(
                                                                        label="Caption", required=False
                                                                    ),
                                                                ),
                                                                (
                                                                    "url",
                                                                    wagtail.blocks.URLBlock(
                                                                        label="Link", required=False
                                                                    ),
                                                                ),
                                                            ],
                                                            label="Image",
                                                        ),
                                                    ),
                                                    (
                                                        "video",
                                                        wagtail.blocks.StructBlock(
                                                            [
                                                                (
                                                                    "title",
                                                                    wagtail.blocks.CharBlock(
                                                                        label="Title", required=False
                                                                    ),
                                                                ),
                                                                ("caption", wagtail.blocks.CharBlock(label="Caption")),
                                                                (
                                                                    "url",
                                                                    wagtail.blocks.URLBlock(
                                                                        help_text="Use embed format (e.g. : https://www.youtube.com/embed/gLzXOViPX-0)",
                                                                        label="Video URL",
                                                                    ),
                                                                ),
                                                            ],
                                                            label="Video",
                                                        ),
                                                    ),
                                                    (
                                                        "quote",
                                                        wagtail.blocks.StructBlock(
                                                            [
                                                                (
                                                                    "image",
                                                                    wagtail.images.blocks.ImageChooserBlock(
                                                                        label="Image", required=False
                                                                    ),
                                                                ),
                                                                ("quote", wagtail.blocks.CharBlock(label="Quote")),
                                                                (
                                                                    "author_name",
                                                                    wagtail.blocks.CharBlock(label="Author name"),
                                                                ),
                                                                (
                                                                    "author_title",
                                                                    wagtail.blocks.CharBlock(
                                                                        label="Author title", required=False
                                                                    ),
                                                                ),
                                                                (
                                                                    "color",
                                                                    wagtail.blocks.ChoiceBlock(
                                                                        choices=[
                                                                            ("village-color3", "Couleur 3"),
                                                                            ("village-color4", "Couleur 4"),
                                                                            ("village-color5", "Couleur 5"),
                                                                            ("village-color6", "Couleur 6"),
                                                                            ("village-color7", "Couleur 7"),
                                                                            ("village-color8", "Couleur 8"),
                                                                            ("village-color9", "Couleur 9"),
                                                                            ("village-color10", "Couleur 10"),
                                                                            ("village-color11", "Couleur 11"),
                                                                            ("village-color12", "Couleur 12"),
                                                                            ("village-color13", "Couleur 13"),
                                                                            ("village-color14", "Couleur 14"),
                                                                            ("village-color15", "Couleur 15"),
                                                                            ("village-color16", "Couleur 16"),
                                                                            ("village-color17", "Couleur 17"),
                                                                            ("village-color18", "Couleur 18"),
                                                                            ("village-color19", "Couleur 19"),
                                                                            ("village-color20", "Couleur 20"),
                                                                        ],
                                                                        label="Color",
                                                                        required=False,
                                                                    ),
                                                                ),
                                                            ],
                                                            label="Quote",
                                                        ),
                                                    ),
                                                    (
                                                        "text_cta",
                                                        wagtail.blocks.StructBlock(
                                                            [
                                                                (
                                                                    "text",
                                                                    wagtail.blocks.RichTextBlock(
                                                                        label="Rich text", required=False
                                                                    ),
                                                                ),
                                                                (
                                                                    "cta_label",
                                                                    wagtail.blocks.CharBlock(
                                                                        help_text="The link appears as a button under the text block",
                                                                        label="Call to action label",
                                                                        required=False,
                                                                    ),
                                                                ),
                                                                (
                                                                    "cta_url",
                                                                    wagtail.blocks.CharBlock(
                                                                        label="Link", required=False
                                                                    ),
                                                                ),
                                                            ],
                                                            label="Text and call to action",
                                                        ),
                                                    ),
                                                    (
                                                        "iframe",
                                                        wagtail.blocks.StructBlock(
                                                            [
                                                                (
                                                                    "title",
                                                                    wagtail.blocks.CharBlock(
                                                                        help_text="Accessibility: The title should describe, in a clear and concise manner, the embedded content.",
                                                                        label="Title",
                                                                    ),
                                                                ),
                                                                (
                                                                    "url",
                                                                    wagtail.blocks.URLBlock(
                                                                        help_text="Example for Tally: https://tally.so/embed/w2jMRa",
                                                                        label="URL of the iframe",
                                                                    ),
                                                                ),
                                                                (
                                                                    "height",
                                                                    wagtail.blocks.IntegerBlock(
                                                                        label="Height (in pixels)"
                                                                    ),
                                                                ),
                                                            ],
                                                            label="Iframe",
                                                        ),
                                                    ),
                                                    (
                                                        "image_and_text",
                                                        wagtail.blocks.StructBlock(
                                                            [
                                                                (
                                                                    "image",
                                                                    wagtail.images.blocks.ImageChooserBlock(
                                                                        label="Image"
                                                                    ),
                                                                ),
                                                                (
                                                                    "image_side",
                                                                    wagtail.blocks.ChoiceBlock(
                                                                        choices=[("left", "Left"), ("right", "Right")],
                                                                        label="Side where the image is displayed",
                                                                    ),
                                                                ),
                                                                (
                                                                    "image_ratio",
                                                                    wagtail.blocks.ChoiceBlock(
                                                                        choices=[
                                                                            ("3", "3/12"),
                                                                            ("5", "5/12"),
                                                                            ("6", "6/12"),
                                                                        ],
                                                                        label="Image width",
                                                                    ),
                                                                ),
                                                                (
                                                                    "text",
                                                                    wagtail.blocks.RichTextBlock(label="Rich text"),
                                                                ),
                                                                (
                                                                    "link",
                                                                    wagtail.blocks.StructBlock(
                                                                        [
                                                                            (
                                                                                "page",
                                                                                wagtail.blocks.PageChooserBlock(
                                                                                    help_text="Link to a page of this site. Use either this or the external URL parameter.",
                                                                                    label="Page",
                                                                                    required=False,
                                                                                ),
                                                                            ),
                                                                            (
                                                                                "external_url",
                                                                                wagtail.blocks.URLBlock(
                                                                                    help_text="Use either this or the Page parameter.",
                                                                                    label="External URL",
                                                                                    required=False,
                                                                                ),
                                                                            ),
                                                                            (
                                                                                "text",
                                                                                wagtail.blocks.CharBlock(
                                                                                    label="Link label", required=False
                                                                                ),
                                                                            ),
                                                                        ],
                                                                        help_text="The link is shown at the bottom of the text block, with an arrow",
                                                                        label="Link",
                                                                        required=False,
                                                                    ),
                                                                ),
                                                                (
                                                                    "link_label",
                                                                    wagtail.blocks.CharBlock(
                                                                        group="obsolete",
                                                                        help_text="This field is obsolete and will be removed in the near future. Please replace with the Link field above.",
                                                                        label="Link label (obsolete)",
                                                                        required=False,
                                                                    ),
                                                                ),
                                                                (
                                                                    "page",
                                                                    wagtail.blocks.PageChooserBlock(
                                                                        group="obsolete",
                                                                        help_text="This field is obsolete and will be removed in the near future. Please replace with the Link field above.",
                                                                        label="Internal link (obsolete)",
                                                                        required=False,
                                                                    ),
                                                                ),
                                                                (
                                                                    "link_url",
                                                                    wagtail.blocks.URLBlock(
                                                                        group="obsolete",
                                                                        help_text="This field is obsolete and will be removed in the near future. Please replace with the Link field above.",
                                                                        label="Link URL (obsolete)",
                                                                        required=False,
                                                                    ),
                                                                ),
                                                            ],
                                                            label="Image and text",
                                                        ),
                                                    ),
                                                ],
                                                label="Content",
                                            ),
                                        ),
                                    ],
                                    group="Page structure",
                                    label="Full width background",
                                ),
                            ),
                        ],
                        blank=True,
                    ),
                ),
                ("header_with_title", models.BooleanField(default=False, verbose_name="Show title in header image?")),
                (
                    "header_color_class",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Primary colors",
                                [
                                    ("village-primary", "Couleur principale"),
                                    ("village-secondary", "Couleur secondaire"),
                                ],
                            ),
                            ("Neutral colors", [("grey", "Grey")]),
                            (
                                "Illustration colors",
                                [
                                    ("village-color3", "Couleur 3"),
                                    ("village-color4", "Couleur 4"),
                                    ("village-color5", "Couleur 5"),
                                    ("village-color6", "Couleur 6"),
                                    ("village-color7", "Couleur 7"),
                                    ("village-color8", "Couleur 8"),
                                    ("village-color9", "Couleur 9"),
                                    ("village-color10", "Couleur 10"),
                                    ("village-color11", "Couleur 11"),
                                    ("village-color12", "Couleur 12"),
                                    ("village-color13", "Couleur 13"),
                                    ("village-color14", "Couleur 14"),
                                    ("village-color15", "Couleur 15"),
                                    ("village-color16", "Couleur 16"),
                                    ("village-color17", "Couleur 17"),
                                    ("village-color18", "Couleur 18"),
                                    ("village-color19", "Couleur 19"),
                                    ("village-color20", "Couleur 20"),
                                ],
                            ),
                        ],
                        help_text="Uses the French Design System colors",
                        null=True,
                        verbose_name="Background color",
                    ),
                ),
                ("header_large", models.BooleanField(default=False, verbose_name="Full width")),
                ("header_darken", models.BooleanField(default=False, verbose_name="Darken background image")),
                ("header_cta_text", models.CharField(blank=True, null=True, verbose_name="Call to action text")),
                ("header_cta_label", models.CharField(blank=True, null=True, verbose_name="Call to action label")),
                ("header_cta_link", models.URLField(blank=True, null=True, verbose_name="Call to action link")),
                (
                    "header_image",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wagtailimages.image",
                        verbose_name="Header image",
                    ),
                ),
            ],
            options={
                "verbose_name": "Content page",
            },
            bases=("wagtailcore.page",),
        ),
        migrations.CreateModel(
            name="FormField",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("sort_order", models.IntegerField(blank=True, editable=False, null=True)),
                (
                    "clean_name",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Safe name of the form field, the label converted to ascii_snake_case",
                        max_length=255,
                        verbose_name="name",
                    ),
                ),
                (
                    "label",
                    models.CharField(help_text="The label of the form field", max_length=255, verbose_name="label"),
                ),
                (
                    "field_type",
                    models.CharField(
                        choices=[
                            ("singleline", "Single line text"),
                            ("multiline", "Multi-line text"),
                            ("email", "Email"),
                            ("number", "Number"),
                            ("url", "URL"),
                            ("checkbox", "Checkbox"),
                            ("checkboxes", "Checkboxes"),
                            ("dropdown", "Drop down"),
                            ("multiselect", "Multiple select"),
                            ("radio", "Radio buttons"),
                            ("date", "Date"),
                            ("datetime", "Date/time"),
                            ("hidden", "Hidden field"),
                        ],
                        max_length=16,
                        verbose_name="field type",
                    ),
                ),
                ("required", models.BooleanField(default=True, verbose_name="required")),
                (
                    "choices",
                    models.TextField(
                        blank=True,
                        help_text="Comma or new line separated list of choices. Only applicable in checkboxes, radio and dropdown.",
                        verbose_name="choices",
                    ),
                ),
                (
                    "default_value",
                    models.TextField(
                        blank=True,
                        help_text="Default value. Comma or new line separated values supported for checkboxes.",
                        verbose_name="default value",
                    ),
                ),
                ("help_text", models.CharField(blank=True, max_length=255, verbose_name="help text")),
                (
                    "page",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="form_fields",
                        to="wagtail_village.formpage",
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="MegaMenu",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=255, verbose_name="Name")),
                ("description", models.TextField(blank=True, verbose_name="Description")),
                ("main_link", models.URLField(blank=True, null=True, verbose_name="Main link")),
                (
                    "parent_menu_item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="megamenu_parent_menu_items",
                        to="wagtailmenus.mainmenuitem",
                    ),
                ),
            ],
            options={
                "verbose_name": "Mega menu",
            },
        ),
        migrations.CreateModel(
            name="MegaMenuCategory",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("sort_order", models.IntegerField(blank=True, editable=False, null=True)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="wagtailmenus.flatmenu",
                        verbose_name="Category",
                    ),
                ),
                (
                    "mega_menu",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="categories",
                        to="wagtail_village.megamenu",
                    ),
                ),
            ],
            options={
                "verbose_name": "Mega menu category",
                "verbose_name_plural": "Mega menu categories",
            },
        ),
        migrations.CreateModel(
            name="TagContentPage",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "content_object",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="contentpage_tags",
                        to="wagtail_village.contentpage",
                    ),
                ),
                (
                    "tag",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_items",
                        to="taggit.tag",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="contentpage",
            name="tags",
            field=modelcluster.contrib.taggit.ClusterTaggableManager(
                blank=True,
                help_text="A comma-separated list of tags.",
                through="wagtail_village.TagContentPage",
                to="taggit.Tag",
                verbose_name="Tags",
            ),
        ),
        migrations.CreateModel(
            name="WagtailVillageConfig",
            fields=[
                (
                    "djangovillageconfig_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="django_village.djangovillageconfig",
                    ),
                ),
                (
                    "footer_description_wagtail",
                    wagtail.fields.RichTextField(blank=True, default="", verbose_name="Description"),
                ),
                ("search_bar", models.BooleanField(default=False, verbose_name="Barre de recherche dans l’en-tête")),
                (
                    "theme_modale_button",
                    models.BooleanField(default=False, verbose_name="Choix du thème clair/sombre"),
                ),
                (
                    "site",
                    models.OneToOneField(
                        editable=False, on_delete=django.db.models.deletion.CASCADE, to="wagtailcore.site"
                    ),
                ),
            ],
            options={
                "verbose_name": "Site configuration",
                "verbose_name_plural": "Site configurations",
            },
            bases=("django_village.djangovillageconfig", models.Model),
        ),
        migrations.CreateModel(
            name="SocialMediaItem",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("sort_order", models.IntegerField(blank=True, editable=False, null=True)),
                ("title", models.CharField(blank=True, default="", max_length=200, verbose_name="Title")),
                ("url", models.URLField(blank=True, default="", verbose_name="URL")),
                ("icon_class", models.CharField(blank=True, default="", max_length=200, verbose_name="Icon class")),
                (
                    "site_config",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="social_media_items",
                        to="wagtail_village.wagtailvillageconfig",
                    ),
                ),
            ],
            options={
                "verbose_name": "Social media item",
                "verbose_name_plural": "Social media items",
            },
        ),
    ]
